version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: todo-postgres
    environment:
      POSTGRES_DB: todos
      POSTGRES_USER: todos
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todos -d todos"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todo-network

  # Go Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: todo-backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=todos
      - DB_PASSWORD=password
      - DB_NAME=todos
      - DB_SSLMODE=disable
      - PORT=8080
      - GIN_MODE=debug
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - todo-network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: todo-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - todo-network
    restart: unless-stopped

  # Redis (for future caching/session storage)
  redis:
    image: redis:7-alpine
    container_name: todo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - todo-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  todo-network:
    driver: bridge
