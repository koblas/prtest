openapi: 3.0.3
info:
  title: Todo API
  description: A simple Todo application API
  version: 1.0.0
  contact:
    name: Todo API Support
    email: support@todoapi.com

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://api.todoapp.com
    description: Production server

paths:
  /api/todos:
    get:
      summary: List all todos
      description: Retrieve a list of all todo items
      operationId: listTodos
      tags:
        - todos
      parameters:
        - name: completed
          in: query
          description: Filter by completion status
          required: false
          schema:
            type: boolean
        - name: limit
          in: query
          description: Maximum number of todos to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Number of todos to skip
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  todos:
                    type: array
                    items:
                      $ref: '#/components/schemas/Todo'
                  total:
                    type: integer
                    description: Total number of todos
                  limit:
                    type: integer
                  offset:
                    type: integer
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new todo
      description: Create a new todo item
      operationId: createTodo
      tags:
        - todos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTodoRequest'
      responses:
        '201':
          description: Todo created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/todos/{id}:
    get:
      summary: Get a specific todo
      description: Retrieve a todo by its ID
      operationId: getTodo
      tags:
        - todos
      parameters:
        - name: id
          in: path
          required: true
          description: Todo ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a todo
      description: Update an existing todo item
      operationId: updateTodo
      tags:
        - todos
      parameters:
        - name: id
          in: path
          required: true
          description: Todo ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTodoRequest'
      responses:
        '200':
          description: Todo updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete a todo
      description: Delete a todo item
      operationId: deleteTodo
      tags:
        - todos
      parameters:
        - name: id
          in: path
          required: true
          description: Todo ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Todo deleted successfully
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Todo:
      type: object
      required:
        - id
        - title
        - completed
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the todo
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          description: Todo title
          minLength: 1
          maxLength: 200
          example: "Buy groceries"
        description:
          type: string
          description: Todo description
          maxLength: 1000
          example: "Need to buy milk, bread, and eggs"
        completed:
          type: boolean
          description: Whether the todo is completed
          example: false
        created_at:
          type: string
          format: date-time
          description: When the todo was created
          example: "2023-01-01T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: When the todo was last updated
          example: "2023-01-01T12:00:00Z"

    CreateTodoRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          description: Todo title
          minLength: 1
          maxLength: 200
          example: "Buy groceries"
        description:
          type: string
          description: Todo description
          maxLength: 1000
          example: "Need to buy milk, bread, and eggs"
        completed:
          type: boolean
          description: Whether the todo is completed
          default: false
          example: false

    UpdateTodoRequest:
      type: object
      properties:
        title:
          type: string
          description: Todo title
          minLength: 1
          maxLength: 200
          example: "Buy groceries"
        description:
          type: string
          description: Todo description
          maxLength: 1000
          example: "Need to buy milk, bread, and eggs"
        completed:
          type: boolean
          description: Whether the todo is completed
          example: true

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
          example: "VALIDATION_ERROR"
        message:
          type: string
          description: Human-readable error message
          example: "Title is required"
        details:
          type: object
          description: Additional error details
          additionalProperties: true